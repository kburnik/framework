<?class EntityBuilder extends EntityCrawler {	private $stats;		private $dataDriver;		private $queue;		private function getQDP() 	{		return Project::GetQDP();	}		protected function handleEntity( $sourceEntry , $entityName )	{				$entityClassName = $entityName;				$qdp = $this->getQDP();					$dd = $this->dataDriver;			$er = new EntityReflection( "$entityClassName" , $dd );				$structure = $er->getStructure();				$indices = $er->getIndices();						if ( $structure ) 		{					if ( count($argv)>1 && $entityClassName != $argv[1] ) continue;						$entityModelClassName = "{$entityClassName}Model";						$model = $entityModelClassName::getInstance();						$entityClassName = strtolower( $entityClassName );						// $query = $qdp->prepareTableQuery( $entityClassName , $structure );								// $res = $query;									//$qdp->drop( $entityClassName );			//$query = $qdp->prepareTableQuery( $entityClassName , $structure );						$this->queue[] = array( $entityClassName , $structure , $indices )  ;			// $res = "Created";												/*			$em = new $entityModelClassName( $mysqlDataDriver );			foreach ( $model->find()->yield() as $item )			{				// print_r( $item );				$em->insert( $item );			}			*/											} else {			$res = "Error";		}				$this->stats[ $entityClassName ] = array($res,$indices);				}		public function build( $sourceEntry , $dataDriver = null ) 	{				$this->resolveProject( $sourceEntry );				if ( $dataDriver === null )			$dataDriver = new MySQLDataDriver();					$this->dataDriver = $dataDriver;				$this->traverse( $sourceEntry );						$qdp = $this->getQDP();				$qdp->execute("SET FOREIGN_KEY_CHECKS=0;");						foreach ( $this->queue as $descriptor ) 		{			list( $entityClassName , $structure, $indices ) = $descriptor;						$structure = array_merge( $structure, $indices );						$qdp->drop( $entityClassName );												$query = $qdp->prepareTableQuery( $entityClassName , $structure , "INNODB" );						$qdp->prepareTable( $entityClassName , $structure , "INNODB" );						if ($err = $qdp->getError() ) {				echo $err."\n";				echo $query."\n";						}					}		$qdp->execute("SET FOREIGN_KEY_CHECKS=1;");			}	}?>