<?class EntityModelResponderRouter extends ApplicationRouter{		public function __construct( $routes = null ) 	{				$this->routes = $routes;			}		private $params = array();			// route to the controller	public function route( $url , $params )	{				$this->params = $params;								$responder = $this->getControllerForRoute( $url );							if ( $responder instanceOf IResponder )		{					return $responder->respond();		} 		else 		{			throw new Exception('No route found');		}	}		// redirect to another route when controller exits	public function redirect( $controller )	{		}		// get the controller once route is found	public function getController( $controllerClassName , $controllerParams )	{		$entityClassName = $controllerParams['entity'];			if ( $entityClassName )		{			$subResponderClassName = "{$entityClassName}Responder";						if ( class_exists( $subResponderClassName ) )			{				$controllerClassName = $subResponderClassName;			}		}						$mergedParams = array_merge( (array) $this->params , (array) $controllerParams );			$responder = new $controllerClassName( $mergedParams );				return $responder;		}}?>